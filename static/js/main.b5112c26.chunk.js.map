{"version":3,"sources":["../../react-memory-app/memory-game/src/logo.svg","../../react-memory-app/memory-game/src/assets/Bad-Joke-Eel.jpg","../../react-memory-app/memory-game/src/assets/Business-Cat.jpg","../../react-memory-app/memory-game/src/assets/Chemistry-Cat.jpg","../../react-memory-app/memory-game/src/assets/Condescending-Wonka.jpg","../../react-memory-app/memory-game/src/assets/Drunk-Baby.jpg","../../react-memory-app/memory-game/src/assets/First-World-Problems.jpg.webp","../../react-memory-app/memory-game/src/assets/Frye.jpg..webp","../../react-memory-app/memory-game/src/assets/Grumpy-Cat.jpg","../../react-memory-app/memory-game/src/assets/Hipster-Dog.jpg.webp","../../react-memory-app/memory-game/src/assets/Its-the-Children.jpg","../../react-memory-app/memory-game/src/assets/Most-Interesting-Man.jpg","../../react-memory-app/memory-game/src/assets/grumpy-cat-meme-fun.jpg","../../react-memory-app/memory-game/src/components/card.js","../../react-memory-app/memory-game/src/components/header.js","../../react-memory-app/memory-game/src/arrayFile.js","../../react-memory-app/memory-game/src/components/board.js","../../react-memory-app/memory-game/src/App.js","../../react-memory-app/memory-game/src/serviceWorker.js","../../react-memory-app/memory-game/src/index.js"],"names":["module","exports","__webpack_require__","p","Card","_ref","number","hasBeenClicked","id","onClick","link","react_default","a","createElement","className","data-value","src","Header","score","wins","arrayOfCards","cardNumber","require","gameLost","shuffle","array","console","log","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Board","state","handleSquareClicked","event","preventDefault","currentNodeID","target","forEach","element","alert","_this","setState","this","_this2","header","map","card","components_card","Component","App","board","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5112c26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bad-Joke-Eel.c4412feb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Business-Cat.d3416819.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Chemistry-Cat.90756013.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Condescending-Wonka.5dcf2340.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Drunk-Baby.5f7b5c0c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/First-World-Problems.jpg.3de027c3.webp\";","module.exports = __webpack_public_path__ + \"static/media/Frye.jpg..86c35e08.webp\";","module.exports = __webpack_public_path__ + \"static/media/Grumpy-Cat.6c228203.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Hipster-Dog.jpg.babf9526.webp\";","module.exports = __webpack_public_path__ + \"static/media/Its-the-Children.43f42d36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Most-Interesting-Man.942def00.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grumpy-cat-meme-fun.5d20431a.jpg\";","import React from \"react\";\n\nfunction Card({ number, hasBeenClicked, id, onClick, link }) {\n  return (\n    <li\n      onClick={onClick}\n      className=\"memoryCard\"\n      data-value={hasBeenClicked}\n      // id={id}\n    >\n      <img src={link} id={id} />\n      {/* {number} */}\n    </li>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction Header({ score, wins }) {\n  return (\n    <div>\n      <p>Welcome to the game</p>\n      <p>score:{score}</p>\n      <p>wins: {wins}</p>\n    </div>\n  );\n}\n\nexport default Header;\n","const arrayOfCards = [\n  {\n    id: 1,\n    cardNumber: 1,\n    hasBeenClicked: false,\n    link: require(\"./assets/Bad-Joke-Eel.jpg\")\n  },\n  {\n    id: 2,\n    cardNumber: 2,\n    hasBeenClicked: false,\n    link: require(\"./assets/Business-Cat.jpg\")\n  },\n  {\n    id: 3,\n    cardNumber: 3,\n    hasBeenClicked: false,\n    link: require(\"./assets/Chemistry-Cat.jpg\")\n  },\n  {\n    id: 4,\n    cardNumber: 4,\n    hasBeenClicked: false,\n    link: require(\"./assets/Condescending-Wonka.jpg\")\n  },\n  {\n    id: 5,\n    cardNumber: 5,\n    hasBeenClicked: false,\n    link: require(\"./assets/Drunk-Baby.jpg\")\n  },\n  {\n    id: 6,\n    cardNumber: 6,\n    hasBeenClicked: false,\n    link: require(\"./assets/First-World-Problems.jpg.webp\")\n  },\n  {\n    id: 7,\n    cardNumber: 7,\n    hasBeenClicked: false,\n    link: require(\"./assets/Frye.jpg..webp\")\n  },\n  {\n    id: 8,\n    cardNumber: 8,\n    hasBeenClicked: false,\n    link: require(\"./assets/Grumpy-Cat.jpg\")\n  },\n  {\n    id: 9,\n    cardNumber: 9,\n    hasBeenClicked: false,\n    link: require(\"./assets/Hipster-Dog.jpg.webp\")\n  },\n  {\n    id: 10,\n    cardNumber: 10,\n    hasBeenClicked: false,\n    link: require(\"./assets/Its-the-Children.jpg\")\n  },\n  {\n    id: 11,\n    cardNumber: 11,\n    hasBeenClicked: false,\n    link: require(\"./assets/Most-Interesting-Man.jpg\")\n  },\n  {\n    id: 12,\n    cardNumber: 12,\n    hasBeenClicked: false,\n    link: require(\"./assets/grumpy-cat-meme-fun.jpg\")\n  }\n];\n\nexport default arrayOfCards;\n","import React, { Component } from \"react\";\nimport Card from \"./card\";\nimport Header from \"./header\";\nimport arrayOfCards from \"../arrayFile\";\n\nvar repeatClick = false;\n\nvar gameLost = false;\n\nfunction shuffle(array) {\n  console.log(\"shuffling the array\");\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nclass Board extends Component {\n  state = {\n    score: 0,\n    wins: 0\n  };\n\n  handleSquareClicked = event => {\n    //preventing auto page reload\n    event.preventDefault();\n\n    //grabbing the id of the image that's clicked\n\n    var currentNodeID = event.target.id;\n    console.log(currentNodeID);\n\n    //checking if the player has lost\n\n    arrayOfCards.forEach(element => {\n      if (element.id == currentNodeID) {\n        if (element.hasBeenClicked == true) {\n          alert(\"You lost\");\n          this.setState({ score: 0 }, function() {\n            //resetting the array after a loss\n            arrayOfCards.forEach(element => {\n              element.hasBeenClicked = false;\n            });\n            shuffle(arrayOfCards);\n          });\n          gameLost = true;\n        } else {\n          //if that image hasn't already been clicked, now mark it as has been clicked\n          element.hasBeenClicked = true;\n        }\n      }\n    });\n\n    //if they haven't lost the game\n\n    if (gameLost == false) {\n      console.log(\"entering the if gamelost false function\");\n      this.setState({ score: this.state.score + 1 }, function() {\n        //if they've clicked all twelve without losing, tell them they won!\n\n        if (this.state.score > 11) {\n          alert(\"You won\");\n          this.setState({ score: 0, wins: this.state.wins + 1 }, function() {\n            arrayOfCards.forEach(element => {\n              element.hasBeenClicked = false;\n            });\n            // shuffle(arrayOfCards);\n          });\n        } else {\n          console.log(\"entering the else clause of the game lost function\");\n          // shuffle(arrayOfCards);\n        }\n      });\n    } else {\n      //if they have lost the game, skip all the steps above and just reset the deck\n      gameLost = false;\n      arrayOfCards.forEach(element => {\n        element.hasBeenClicked = false;\n      });\n    }\n\n    shuffle(arrayOfCards);\n\n    //go through and see if the player has lost\n  };\n\n  render() {\n    return (\n      <div className=\"mainBoard\">\n        <Header score={this.state.score} wins={this.state.wins} />\n        <div className=\"board\">\n          {arrayOfCards.map(card => (\n            <Card\n              number={card.cardNumber}\n              hasBeenClicked={card.hasBeenClicked}\n              id={card.id}\n              onClick={this.handleSquareClicked}\n              link={card.link}\n            />\n          ))}\n          {/* <Card number={1} hasBeenClicked={false} /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Card from \"./components/card\";\nimport Board from \"./components/board\";\n// import Header from \"./components/header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}